// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Service.Data;

namespace Service.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210421135058_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Service.Data.Models.DiscountInputType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Flag")
                        .HasColumnName("flag")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_discount_input_type");

                    b.ToTable("discount_input_type");
                });

            modelBuilder.Entity("Service.Data.Models.DiscountType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Flag")
                        .HasColumnName("flag")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Operation")
                        .HasColumnName("operation")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_discount_type");

                    b.ToTable("discount_type");
                });

            modelBuilder.Entity("Service.Data.Models.Promo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Caption")
                        .HasColumnName("caption")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("ImageStorageName")
                        .HasColumnName("image_storage_name")
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .HasColumnName("image_url")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnName("period_from")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PeriodUntil")
                        .HasColumnName("period_until")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("text");

                    b.Property<long>("VoucherId")
                        .HasColumnName("voucher_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("pk_promo");

                    b.HasIndex("VoucherId")
                        .HasName("ix_promo_voucher_id");

                    b.ToTable("promo");
                });

            modelBuilder.Entity("Service.Data.Models.Voucher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("DiscountInputTypeId")
                        .HasColumnName("discount_input_type_id")
                        .HasColumnType("bigint");

                    b.Property<long>("DiscountTypeId")
                        .HasColumnName("discount_type_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("IsPublic")
                        .HasColumnName("is_public")
                        .HasColumnType("integer");

                    b.Property<int>("LimitPerDay")
                        .HasColumnName("limit_per_day")
                        .HasColumnType("integer");

                    b.Property<int>("MaxDiscount")
                        .HasColumnName("max_discount")
                        .HasColumnType("integer");

                    b.Property<int>("MaxQtyPerUser")
                        .HasColumnName("max_qty_per_user")
                        .HasColumnType("integer");

                    b.Property<int>("MaxQtyPerUserPerDay")
                        .HasColumnName("max_qty_per_user_per_day")
                        .HasColumnType("integer");

                    b.Property<int>("MinOrderAmount")
                        .HasColumnName("min_order_amount")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnName("period_from")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PeriodUntil")
                        .HasColumnName("period_until")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("QtyVoucher")
                        .HasColumnName("qty_voucher")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnName("value")
                        .HasColumnType("integer");

                    b.Property<string>("VoucherCode")
                        .HasColumnName("voucher_code")
                        .HasColumnType("text");

                    b.Property<long>("VoucherTypeId")
                        .HasColumnName("voucher_type_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("pk_voucher");

                    b.HasIndex("DiscountInputTypeId")
                        .HasName("ix_voucher_discount_input_type_id");

                    b.HasIndex("DiscountTypeId")
                        .HasName("ix_voucher_discount_type_id");

                    b.HasIndex("VoucherTypeId")
                        .HasName("ix_voucher_voucher_type_id");

                    b.ToTable("voucher");
                });

            modelBuilder.Entity("Service.Data.Models.VoucherType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_voucher_type");

                    b.ToTable("voucher_type");
                });

            modelBuilder.Entity("Service.Data.Models.Promo", b =>
                {
                    b.HasOne("Service.Data.Models.Voucher", "Voucher")
                        .WithMany("Promo")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("fk_promo_voucher_voucher_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Service.Data.Models.Voucher", b =>
                {
                    b.HasOne("Service.Data.Models.DiscountInputType", "DiscountInputType")
                        .WithMany("Voucher")
                        .HasForeignKey("DiscountInputTypeId")
                        .HasConstraintName("fk_voucher_discount_input_type_discount_input_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Data.Models.DiscountType", "DiscountType")
                        .WithMany("Voucher")
                        .HasForeignKey("DiscountTypeId")
                        .HasConstraintName("fk_voucher_discount_type_discount_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Data.Models.VoucherType", "VoucherType")
                        .WithMany("Voucher")
                        .HasForeignKey("VoucherTypeId")
                        .HasConstraintName("fk_voucher_voucher_type_voucher_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
